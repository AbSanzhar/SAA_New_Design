(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/platform-browser'),require('@angular/common'),require('@angular/animations'),require('@angular/material/button'),require('@angular/material/icon'),exports, require('@angular/core'), require('@angular/platform-browser'), require('@angular/animations'), require('@angular/cdk/a11y'), require('@angular/common'), require('rxjs'), require('rxjs/operators'), require('@angular/material/button'), require('@angular/material/icon')) :
    typeof define === 'function' && define.amd ? define('@ngmodule/material-carousel', ['@angular/core','@angular/platform-browser','@angular/common','@angular/animations','@angular/material/button','@angular/material/icon','exports', '@angular/core', '@angular/platform-browser', '@angular/animations', '@angular/cdk/a11y', '@angular/common', 'rxjs', 'rxjs/operators', '@angular/material/button', '@angular/material/icon'], factory) :
    (factory(global.ng.core,global.ng.platformBrowser,global.ng.common,global.ng.animations,global.ng.material.button,global.ng.material.icon,(global.ngmodule = global.ngmodule || {}, global.ngmodule['material-carousel'] = {}),global.ng.core,global.ng.platformBrowser,global.ng.animations,global.ng.cdk.a11y,global.ng.common,global.rxjs,global.rxjs.operators,global.ng.material.button,global.ng.material.icon));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,exports,core,platformBrowser,animations,a11y,common,rxjs,operators,button,icon) { 
function MatCarouselSlideComponent_ng_template_0_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 3);
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵstyleProp("background-color", ctx_r1.overlayColor);
} }
function MatCarouselSlideComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 0);
    ɵngcc0.ɵɵelementStart(1, "div", 1);
    ɵngcc0.ɵɵprojection(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, MatCarouselSlideComponent_ng_template_0_div_3_Template, 1, 2, "div", 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("background-image", ctx_r0.image);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.hideOverlay);
} }
var _c0 = ["*"];
var _c1 = ["carouselContainer"];
var _c2 = ["carouselList"];
function MatCarouselComponent_li_4_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 7, 8);
    ɵngcc0.ɵɵlistener("panleft", function MatCarouselComponent_li_4_Template_li_panleft_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var _r7 = ɵngcc0.ɵɵreference(1); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onPan($event, _r7); })("panright", function MatCarouselComponent_li_4_Template_li_panright_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var _r7 = ɵngcc0.ɵɵreference(1); var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onPan($event, _r7); })("panend", function MatCarouselComponent_li_4_Template_li_panend_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var _r7 = ɵngcc0.ɵɵreference(1); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onPanEnd($event, _r7); })("pancancel", function MatCarouselComponent_li_4_Template_li_pancancel_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var _r7 = ɵngcc0.ɵɵreference(1); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.onPanEnd($event, _r7); });
    ɵngcc0.ɵɵelementContainer(2, 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var slide_r6 = ctx.$implicit;
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("padding-bottom", ctx_r2.maintainAspectRatio && ctx_r2.proportion ? ctx_r2.proportion + "%" : "0px")("height", !ctx_r2.maintainAspectRatio && ctx_r2.slideHeight ? ctx_r2.slideHeight : "0px");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", slide_r6.templateRef);
} }
function MatCarouselComponent_button_5_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-icon", 13);
} if (rf & 2) {
    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("svgIcon", ctx_r13.svgIconOverrides.arrowBack);
} }
function MatCarouselComponent_button_5_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon");
    ɵngcc0.ɵɵtext(1, "arrow_back");
    ɵngcc0.ɵɵelementEnd();
} }
function MatCarouselComponent_button_5_Template(rf, ctx) { if (rf & 1) {
    var _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function MatCarouselComponent_button_5_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); var ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.previous(); });
    ɵngcc0.ɵɵtemplate(1, MatCarouselComponent_button_5_mat_icon_1_Template, 1, 1, "mat-icon", 11);
    ɵngcc0.ɵɵtemplate(2, MatCarouselComponent_button_5_ng_template_2_Template, 2, 0, "ng-template", null, 12, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r14 = ɵngcc0.ɵɵreference(3);
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("color", ctx_r3.color)("disabled", !ctx_r3.loop && ctx_r3.currentIndex == 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.svgIconOverrides == null ? null : ctx_r3.svgIconOverrides.arrowBack)("ngIfElse", _r14);
} }
function MatCarouselComponent_button_6_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-icon", 13);
} if (rf & 2) {
    var ctx_r18 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("svgIcon", ctx_r18.svgIconOverrides.arrowForward);
} }
function MatCarouselComponent_button_6_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon");
    ɵngcc0.ɵɵtext(1, "arrow_forward");
    ɵngcc0.ɵɵelementEnd();
} }
function MatCarouselComponent_button_6_Template(rf, ctx) { if (rf & 1) {
    var _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function MatCarouselComponent_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r22); var ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.next(); });
    ɵngcc0.ɵɵtemplate(1, MatCarouselComponent_button_6_mat_icon_1_Template, 1, 1, "mat-icon", 11);
    ɵngcc0.ɵɵtemplate(2, MatCarouselComponent_button_6_ng_template_2_Template, 2, 0, "ng-template", null, 14, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r19 = ɵngcc0.ɵɵreference(3);
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("color", ctx_r4.color)("disabled", !ctx_r4.loop && ctx_r4.currentIndex == ctx_r4.slidesList.length - 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.svgIconOverrides == null ? null : ctx_r4.svgIconOverrides.arrowForward)("ngIfElse", _r19);
} }
function MatCarouselComponent_div_7_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r27 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 17);
    ɵngcc0.ɵɵlistener("click", function MatCarouselComponent_div_7_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r27); var i_r25 = ctx.index; var ctx_r26 = ɵngcc0.ɵɵnextContext(2); return ctx_r26.slideTo(i_r25); })("focus", function MatCarouselComponent_div_7_button_1_Template_button_focus_0_listener() { ɵngcc0.ɵɵrestoreView(_r27); ɵngcc0.ɵɵnextContext(2); var _r0 = ɵngcc0.ɵɵreference(1); return _r0.focus(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var i_r25 = ctx.index;
    var ctx_r23 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("color", ctx_r23.color)("disabled", i_r25 == ctx_r23.currentIndex);
} }
function MatCarouselComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵtemplate(1, MatCarouselComponent_div_7_button_1_Template, 1, 2, "button", 16);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("flex-direction", ctx_r5.orientation === "rtl" ? "row-reverse" : "row");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.slidesList);
} }
'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MatCarouselSlideComponent = /** @class */ (function () {
        function MatCarouselSlideComponent(sanitizer) {
            this.sanitizer = sanitizer;
            this.overlayColor = '#00000040';
            this.hideOverlay = false;
            this.disabled = false; // implements ListKeyManagerOption
        }
        /**
         * @return {?}
         */
        MatCarouselSlideComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                if (this.image) {
                    this.image = this.sanitizer.bypassSecurityTrustStyle("url(\"" + this.image + "\")");
                }
            };
        /** @nocollapse */
        MatCarouselSlideComponent.ctorParameters = function () {
            return [
                { type: platformBrowser.DomSanitizer }
            ];
        };
        MatCarouselSlideComponent.propDecorators = {
            image: [{ type: core.Input }],
            overlayColor: [{ type: core.Input }],
            hideOverlay: [{ type: core.Input }],
            disabled: [{ type: core.Input }],
            templateRef: [{ type: core.ViewChild, args: [core.TemplateRef,] }]
        };
MatCarouselSlideComponent.ɵfac = function MatCarouselSlideComponent_Factory(t) { return new (t || MatCarouselSlideComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer)); };
MatCarouselSlideComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCarouselSlideComponent, selectors: [["mat-carousel-slide"]], viewQuery: function MatCarouselSlideComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(core.TemplateRef, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, inputs: { overlayColor: "overlayColor", hideOverlay: "hideOverlay", disabled: "disabled", image: "image" }, ngContentSelectors: _c0, decls: 1, vars: 0, consts: [[1, "carousel-slide"], [1, "carousel-slide-content"], ["class", "carousel-slide-overlay", 3, "background-color", 4, "ngIf"], [1, "carousel-slide-overlay"]], template: function MatCarouselSlideComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, MatCarouselSlideComponent_ng_template_0_Template, 4, 3, "ng-template");
    } }, directives: [ɵngcc2.NgIf], styles: [".carousel-slide[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:auto;background-size:cover;background-repeat:no-repeat;background-position:center}.carousel-slide-overlay[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:auto}.carousel-slide-content[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:1}"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCarouselSlideComponent, [{
        type: core.Component,
        args: [{
                selector: 'mat-carousel-slide',
                template: "<ng-template>\n  <div class=\"carousel-slide\" [style.background-image]=\"image\">\n    <div class=\"carousel-slide-content\"><ng-content></ng-content></div>\n    <div\n      *ngIf=\"!hideOverlay\"\n      class=\"carousel-slide-overlay\"\n      [style.background-color]=\"overlayColor\"\n    ></div>\n  </div>\n</ng-template>\n",
                styles: [".carousel-slide{width:100%;height:100%;position:absolute;z-index:auto;background-size:cover;background-repeat:no-repeat;background-position:center}.carousel-slide-overlay{width:100%;height:100%;position:absolute;z-index:auto}.carousel-slide-content{width:100%;height:100%;position:absolute;z-index:1}"]
            }]
    }], function () { return [{ type: ɵngcc1.DomSanitizer }]; }, { overlayColor: [{
            type: core.Input
        }], hideOverlay: [{
            type: core.Input
        }], disabled: [{
            type: core.Input
        }], image: [{
            type: core.Input
        }], templateRef: [{
            type: core.ViewChild,
            args: [core.TemplateRef]
        }] }); })();
        return MatCarouselSlideComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @enum {number} */
    var Direction = {
        Left: 0,
        Right: 1,
        Index: 2,
    };
    Direction[Direction.Left] = 'Left';
    Direction[Direction.Right] = 'Right';
    Direction[Direction.Index] = 'Index';
    var MatCarouselComponent = /** @class */ (function () {
        function MatCarouselComponent(animationBuilder, renderer, platformId) {
            this.animationBuilder = animationBuilder;
            this.renderer = renderer;
            this.platformId = platformId;
            this.timings = '250ms ease-in';
            this.hideArrows = true;
            this.hideIndicators = true;
            this.color = 'accent';
            this.maintainAspectRatio = true;
            this.proportion = 25;
            this.slideHeight = '100%';
            this.useKeyboard = false;
            this.useMouseWheel = false;
            this.change = new core.EventEmitter();
            this._autoplay = true;
            this.autoplay$ = new rxjs.Subject();
            this.interval$ = new rxjs.BehaviorSubject(5000);
            this.slides$ = new rxjs.BehaviorSubject(null);
            this._maxWidth = 'auto';
            this.maxWidth$ = new rxjs.Subject();
            this._loop = true;
            this.loop$ = new rxjs.Subject();
            this._orientation = 'ltr';
            this.orientation$ = new rxjs.Subject();
            this.timerStop$ = new rxjs.Subject();
            this.destroy$ = new rxjs.Subject();
            this.playing = false;
        }
        Object.defineProperty(MatCarouselComponent.prototype, "autoplay", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.autoplay$.next(value);
                this._autoplay = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatCarouselComponent.prototype, "interval", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.interval$.next(value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatCarouselComponent.prototype, "loop", {
            get: /**
             * @return {?}
             */ function () {
                return this._loop;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.loop$.next(value);
                this._loop = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatCarouselComponent.prototype, "maxWidth", {
            get: /**
             * @return {?}
             */ function () {
                return this._maxWidth;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._maxWidth = value;
                this.maxWidth$.next();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatCarouselComponent.prototype, "slides", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.slides$.next(value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatCarouselComponent.prototype, "orientation", {
            get: /**
             * @return {?}
             */ function () {
                return this._orientation;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.orientation$.next(value);
                this._orientation = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatCarouselComponent.prototype, "currentIndex", {
            get: /**
             * @return {?}
             */ function () {
                if (this.listKeyManager) {
                    return this.listKeyManager.activeItemIndex;
                }
                return 0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatCarouselComponent.prototype, "currentSlide", {
            get: /**
             * @return {?}
             */ function () {
                if (this.listKeyManager) {
                    return this.listKeyManager.activeItem;
                }
                return null;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        MatCarouselComponent.prototype.ngAfterContentInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.listKeyManager = new a11y.ListKeyManager(this.slidesList)
                    .withVerticalOrientation(false)
                    .withHorizontalOrientation(this._orientation)
                    .withWrap(this._loop);
                this.listKeyManager.updateActiveItem(0);
                this.listKeyManager.change
                    .pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function () { return _this.playAnimation(); });
            };
        /**
         * @return {?}
         */
        MatCarouselComponent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.autoplay$.pipe(operators.takeUntil(this.destroy$)).subscribe(function (value) {
                    _this.stopTimer();
                    _this.startTimer(value);
                });
                this.interval$.pipe(operators.takeUntil(this.destroy$)).subscribe(function (value) {
                    _this.stopTimer();
                    _this.resetTimer(value);
                    _this.startTimer(_this._autoplay);
                });
                this.maxWidth$
                    .pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function () { return _this.slideTo(0); });
                this.loop$
                    .pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function (value) { return _this.listKeyManager.withWrap(value); });
                this.orientation$
                    .pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function (value) { return _this.listKeyManager.withHorizontalOrientation(value); });
                this.slides$
                    .pipe(operators.takeUntil(this.destroy$), operators.filter(function (value) { return value && value < _this.slidesList.length; }))
                    .subscribe(function (value) { return _this.resetSlides(value); });
            };
        /**
         * @return {?}
         */
        MatCarouselComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                this.destroy$.next();
                this.destroy$.complete();
            };
        /**
         * @return {?}
         */
        MatCarouselComponent.prototype.next = /**
         * @return {?}
         */
            function () {
                this.goto(Direction.Right);
            };
        /**
         * @return {?}
         */
        MatCarouselComponent.prototype.previous = /**
         * @return {?}
         */
            function () {
                this.goto(Direction.Left);
            };
        /**
         * @param {?} index
         * @return {?}
         */
        MatCarouselComponent.prototype.slideTo = /**
         * @param {?} index
         * @return {?}
         */
            function (index) {
                this.goto(Direction.Index, index);
            };
        /**
         * @param {?} event
         * @return {?}
         */
        MatCarouselComponent.prototype.onKeyUp = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (this.useKeyboard && !this.playing) {
                    this.listKeyManager.onKeydown(event);
                }
            };
        /**
         * @return {?}
         */
        MatCarouselComponent.prototype.onMouseEnter = /**
         * @return {?}
         */
            function () {
                this.stopTimer();
            };
        /**
         * @return {?}
         */
        MatCarouselComponent.prototype.onMouseLeave = /**
         * @return {?}
         */
            function () {
                this.startTimer(this._autoplay);
            };
        /**
         * @param {?} event
         * @return {?}
         */
        MatCarouselComponent.prototype.onMouseWheel = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (this.useMouseWheel) {
                    event.preventDefault(); // prevent window to scroll
                    // prevent window to scroll
                    /** @type {?} */
                    var Δ = Math.sign(event.wheelDelta);
                    if (Δ < 0) {
                        this.next();
                    }
                    else if (Δ > 0) {
                        this.previous();
                    }
                }
            };
        /**
         * @param {?} event
         * @return {?}
         */
        MatCarouselComponent.prototype.onResize = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                // Reset carousel when window is resized
                // in order to avoid major glitches.
                this.slideTo(0);
            };
        /**
         * @param {?} event
         * @param {?} slideElem
         * @return {?}
         */
        MatCarouselComponent.prototype.onPan = /**
         * @param {?} event
         * @param {?} slideElem
         * @return {?}
         */
            function (event, slideElem) {
                // https://github.com/angular/angular/issues/10541#issuecomment-346539242
                // if y velocity is greater, it's a panup/pandown, so ignore.
                if (Math.abs(event.velocityY) > Math.abs(event.velocityX)) {
                    return;
                }
                /** @type {?} */
                var Δx = event.deltaX;
                if (this.isOutOfBounds()) {
                    Δx *= 0.2; // decelerate movement;
                }
                this.renderer.setStyle(slideElem, 'cursor', 'grabbing');
                this.renderer.setStyle(this.carouselList.nativeElement, 'transform', this.getTranslation(this.getOffset() + Δx));
            };
        /**
         * @param {?} event
         * @param {?} slideElem
         * @return {?}
         */
        MatCarouselComponent.prototype.onPanEnd = /**
         * @param {?} event
         * @param {?} slideElem
         * @return {?}
         */
            function (event, slideElem) {
                this.renderer.removeStyle(slideElem, 'cursor');
                if (!this.isOutOfBounds() &&
                    Math.abs(event.deltaX) > this.getWidth() * 0.25) {
                    if (event.deltaX <= 0) {
                        this.next();
                        return;
                    }
                    this.previous();
                    return;
                }
                this.playAnimation(); // slide back, don't change current index
            };
        /**
         * @private
         * @return {?}
         */
        MatCarouselComponent.prototype.isOutOfBounds = /**
         * @private
         * @return {?}
         */
            function () {
                /** @type {?} */
                var sign = this.orientation === 'rtl' ? -1 : 1;
                /** @type {?} */
                var left = sign *
                    (this.carouselList.nativeElement.getBoundingClientRect().left -
                        this.carouselList.nativeElement.offsetParent.getBoundingClientRect()
                            .left);
                /** @type {?} */
                var lastIndex = this.slidesList.length - 1;
                /** @type {?} */
                var width = -this.getWidth() * lastIndex;
                return ((this.listKeyManager.activeItemIndex === 0 && left >= 0) ||
                    (this.listKeyManager.activeItemIndex === lastIndex && left <= width));
            };
        /**
         * @private
         * @return {?}
         */
        MatCarouselComponent.prototype.isVisible = /**
         * @private
         * @return {?}
         */
            function () {
                if (!common.isPlatformBrowser(this.platformId)) {
                    return false;
                }
                /** @type {?} */
                var elem = this.carouselContainer.nativeElement;
                /** @type {?} */
                var docViewTop = window.pageYOffset;
                /** @type {?} */
                var docViewBottom = docViewTop + window.innerHeight;
                /** @type {?} */
                var elemOffset = elem.getBoundingClientRect();
                /** @type {?} */
                var elemTop = docViewTop + elemOffset.top;
                /** @type {?} */
                var elemBottom = elemTop + elemOffset.height;
                return elemBottom <= docViewBottom || elemTop >= docViewTop;
            };
        /**
         * @private
         * @return {?}
         */
        MatCarouselComponent.prototype.getOffset = /**
         * @private
         * @return {?}
         */
            function () {
                /** @type {?} */
                var offset = this.listKeyManager.activeItemIndex * this.getWidth();
                /** @type {?} */
                var sign = this.orientation === 'rtl' ? 1 : -1;
                return sign * offset;
            };
        /**
         * @private
         * @param {?} offset
         * @return {?}
         */
        MatCarouselComponent.prototype.getTranslation = /**
         * @private
         * @param {?} offset
         * @return {?}
         */
            function (offset) {
                return "translateX(" + offset + "px)";
            };
        /**
         * @private
         * @return {?}
         */
        MatCarouselComponent.prototype.getWidth = /**
         * @private
         * @return {?}
         */
            function () {
                return this.carouselContainer.nativeElement.clientWidth;
            };
        /**
         * @private
         * @param {?} direction
         * @param {?=} index
         * @return {?}
         */
        MatCarouselComponent.prototype.goto = /**
         * @private
         * @param {?} direction
         * @param {?=} index
         * @return {?}
         */
            function (direction, index) {
                if (!this.playing) {
                    /** @type {?} */
                    var rtl = this.orientation === 'rtl';
                    switch (direction) {
                        case Direction.Left:
                            return rtl
                                ? this.listKeyManager.setNextItemActive()
                                : this.listKeyManager.setPreviousItemActive();
                        case Direction.Right:
                            return rtl
                                ? this.listKeyManager.setPreviousItemActive()
                                : this.listKeyManager.setNextItemActive();
                        case Direction.Index:
                            return this.listKeyManager.setActiveItem(index);
                    }
                }
            };
        /**
         * @private
         * @return {?}
         */
        MatCarouselComponent.prototype.playAnimation = /**
         * @private
         * @return {?}
         */
            function () {
                var _this = this;
                /** @type {?} */
                var translation = this.getTranslation(this.getOffset());
                /** @type {?} */
                var factory = this.animationBuilder.build(animations.animate(this.timings, animations.style({ transform: translation })));
                /** @type {?} */
                var animation = factory.create(this.carouselList.nativeElement);
                animation.onStart(function () { return (_this.playing = true); });
                animation.onDone(function () {
                    _this.change.emit(_this.currentIndex);
                    _this.playing = false;
                    _this.renderer.setStyle(_this.carouselList.nativeElement, 'transform', translation);
                    animation.destroy();
                });
                animation.play();
            };
        /**
         * @private
         * @param {?} slides
         * @return {?}
         */
        MatCarouselComponent.prototype.resetSlides = /**
         * @private
         * @param {?} slides
         * @return {?}
         */
            function (slides) {
                this.slidesList.reset(this.slidesList.toArray().slice(0, slides));
            };
        /**
         * @private
         * @param {?} value
         * @return {?}
         */
        MatCarouselComponent.prototype.resetTimer = /**
         * @private
         * @param {?} value
         * @return {?}
         */
            function (value) {
                this.timer$ = rxjs.interval(value);
            };
        /**
         * @private
         * @param {?} autoplay
         * @return {?}
         */
        MatCarouselComponent.prototype.startTimer = /**
         * @private
         * @param {?} autoplay
         * @return {?}
         */
            function (autoplay) {
                var _this = this;
                if (!autoplay) {
                    return;
                }
                this.timer$
                    .pipe(operators.takeUntil(this.timerStop$), operators.takeUntil(this.destroy$), operators.filter(function () { return _this.isVisible(); }))
                    .subscribe(function () {
                    _this.listKeyManager.withWrap(true).setNextItemActive();
                    _this.listKeyManager.withWrap(_this.loop);
                });
            };
        /**
         * @private
         * @return {?}
         */
        MatCarouselComponent.prototype.stopTimer = /**
         * @private
         * @return {?}
         */
            function () {
                this.timerStop$.next();
            };
        /** @nocollapse */
        MatCarouselComponent.ctorParameters = function () {
            return [
                { type: animations.AnimationBuilder },
                { type: core.Renderer2 },
                { type: undefined, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] }] }
            ];
        };
        MatCarouselComponent.propDecorators = {
            timings: [{ type: core.Input }],
            svgIconOverrides: [{ type: core.Input }],
            autoplay: [{ type: core.Input }],
            interval: [{ type: core.Input }],
            loop: [{ type: core.Input }],
            hideArrows: [{ type: core.Input }],
            hideIndicators: [{ type: core.Input }],
            color: [{ type: core.Input }],
            maxWidth: [{ type: core.Input }],
            maintainAspectRatio: [{ type: core.Input }],
            proportion: [{ type: core.Input }],
            slideHeight: [{ type: core.Input }],
            slides: [{ type: core.Input }],
            useKeyboard: [{ type: core.Input }],
            useMouseWheel: [{ type: core.Input }],
            orientation: [{ type: core.Input }],
            change: [{ type: core.Output }],
            slidesList: [{ type: core.ContentChildren, args: [MatCarouselSlideComponent,] }],
            carouselContainer: [{ type: core.ViewChild, args: ['carouselContainer',] }],
            carouselList: [{ type: core.ViewChild, args: ['carouselList',] }],
            onKeyUp: [{ type: core.HostListener, args: ['keyup', ['$event'],] }],
            onMouseEnter: [{ type: core.HostListener, args: ['mouseenter',] }],
            onMouseLeave: [{ type: core.HostListener, args: ['mouseleave',] }],
            onMouseWheel: [{ type: core.HostListener, args: ['mousewheel', ['$event'],] }],
            onResize: [{ type: core.HostListener, args: ['window:resize', ['$event'],] }]
        };
MatCarouselComponent.ɵfac = function MatCarouselComponent_Factory(t) { return new (t || MatCarouselComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.AnimationBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(core.PLATFORM_ID)); };
MatCarouselComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCarouselComponent, selectors: [["mat-carousel"]], contentQueries: function MatCarouselComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, MatCarouselSlideComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slidesList = _t);
    } }, viewQuery: function MatCarouselComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c1, true);
        ɵngcc0.ɵɵviewQuery(_c2, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.carouselContainer = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.carouselList = _t.first);
    } }, hostBindings: function MatCarouselComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keyup", function MatCarouselComponent_keyup_HostBindingHandler($event) { return ctx.onKeyUp($event); })("mouseenter", function MatCarouselComponent_mouseenter_HostBindingHandler() { return ctx.onMouseEnter(); })("mouseleave", function MatCarouselComponent_mouseleave_HostBindingHandler() { return ctx.onMouseLeave(); })("mousewheel", function MatCarouselComponent_mousewheel_HostBindingHandler($event) { return ctx.onMouseWheel($event); })("resize", function MatCarouselComponent_resize_HostBindingHandler($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);
    } }, inputs: { timings: "timings", hideArrows: "hideArrows", hideIndicators: "hideIndicators", color: "color", maintainAspectRatio: "maintainAspectRatio", proportion: "proportion", slideHeight: "slideHeight", useKeyboard: "useKeyboard", useMouseWheel: "useMouseWheel", autoplay: "autoplay", interval: "interval", loop: "loop", maxWidth: "maxWidth", slides: "slides", orientation: "orientation", svgIconOverrides: "svgIconOverrides" }, outputs: { change: "change" }, decls: 8, vars: 12, consts: [["tabindex", "0", 1, "carousel"], ["carouselContainer", ""], ["role", "listbox", 1, "carousel-list"], ["carouselList", ""], ["class", "carousel-slide", "role", "option", 3, "padding-bottom", "height", "panleft", "panright", "panend", "pancancel", 4, "ngFor", "ngForOf"], ["mat-icon-button", "", "type", "button", "tabindex", "-1", 3, "color", "disabled", "click", 4, "ngIf"], ["class", "carousel-indicators", "tabindex", "-1", 3, "flex-direction", 4, "ngIf"], ["role", "option", 1, "carousel-slide", 3, "panleft", "panright", "panend", "pancancel"], ["carouselSlide", ""], [3, "ngTemplateOutlet"], ["mat-icon-button", "", "type", "button", "tabindex", "-1", 3, "color", "disabled", "click"], [3, "svgIcon", 4, "ngIf", "ngIfElse"], ["defaultArrowBack", ""], [3, "svgIcon"], ["defaultArrowForward", ""], ["tabindex", "-1", 1, "carousel-indicators"], ["type", "button", "tabindex", "-1", "mat-mini-fab", "", 3, "color", "disabled", "click", "focus", 4, "ngFor", "ngForOf"], ["type", "button", "tabindex", "-1", "mat-mini-fab", "", 3, "color", "disabled", "click", "focus"]], template: function MatCarouselComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "ul", 2, 3);
        ɵngcc0.ɵɵtemplate(4, MatCarouselComponent_li_4_Template, 3, 5, "li", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, MatCarouselComponent_button_5_Template, 4, 4, "button", 5);
        ɵngcc0.ɵɵtemplate(6, MatCarouselComponent_button_6_Template, 4, 4, "button", 5);
        ɵngcc0.ɵɵtemplate(7, MatCarouselComponent_div_7_Template, 2, 3, "div", 6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("max-width", ctx.maxWidth)("height", !ctx.maintainAspectRatio ? "100%" : "auto");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵstyleProp("flex-direction", ctx.orientation === "rtl" ? "row-reverse" : "row")("height", !ctx.maintainAspectRatio ? "100%" : "auto");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.slidesList);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hideArrows);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hideArrows);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hideIndicators);
    } }, directives: [ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, ɵngcc4.MatButton, ɵngcc5.MatIcon], styles: [".carousel[_ngcontent-%COMP%]{width:100%;position:relative;overflow:hidden;outline:0}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{position:absolute;z-index:1;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:first-of-type{left:30px}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:last-of-type{right:30px}.carousel-list[_ngcontent-%COMP%]{width:100%;margin:0;padding:0;list-style:none;display:flex;position:relative}.carousel-slide[_ngcontent-%COMP%]{width:100%;height:0;display:flex;flex-shrink:0;position:relative}.carousel-slide[_ngcontent-%COMP%]:hover{cursor:-webkit-grab;cursor:grab}.carousel-indicators[_ngcontent-%COMP%]{display:flex;position:absolute;bottom:15px;z-index:1;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);outline:0}.carousel-indicators[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{width:10px;height:10px;margin:7.5px}"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCarouselComponent, [{
        type: core.Component,
        args: [{
                selector: 'mat-carousel',
                template: "<div\n  #carouselContainer\n  class=\"carousel\"\n  tabindex=\"0\"\n  [style.max-width]=\"maxWidth\"\n  [style.height]=\"!maintainAspectRatio ? '100%' : 'auto'\"\n>\n  <ul\n    #carouselList\n    class=\"carousel-list\"\n    role=\"listbox\"\n    [style.flex-direction]=\"orientation === 'rtl' ? 'row-reverse' : 'row'\"\n    [style.height]=\"!maintainAspectRatio ? '100%' : 'auto'\"\n  >\n    <li\n      #carouselSlide\n      *ngFor=\"let slide of slidesList\"\n      class=\"carousel-slide\"\n      role=\"option\"\n      [style.padding-bottom]=\"maintainAspectRatio && proportion ? proportion + '%': '0px'\"\n      [style.height]=\"!maintainAspectRatio && slideHeight ? slideHeight : '0px'\"\n      (panleft)=\"onPan($event, carouselSlide)\"\n      (panright)=\"onPan($event, carouselSlide)\"\n      (panend)=\"onPanEnd($event, carouselSlide)\"\n      (pancancel)=\"onPanEnd($event, carouselSlide)\"\n    >\n      <ng-container [ngTemplateOutlet]=\"slide.templateRef\"></ng-container>\n    </li>\n  </ul>\n\n  <button\n    *ngIf=\"!hideArrows\"\n    mat-icon-button\n    type=\"button\"\n    tabindex=\"-1\"\n    [color]=\"color\"\n    [disabled]=\"!loop && currentIndex == 0\"\n    (click)=\"previous()\"\n  >\n    <mat-icon\n      *ngIf=\"svgIconOverrides?.arrowBack; else: defaultArrowBack\"\n      [svgIcon]=\"svgIconOverrides.arrowBack\"\n    ></mat-icon>\n    <ng-template #defaultArrowBack>\n      <mat-icon>arrow_back</mat-icon>\n    </ng-template>\n  </button>\n  <button\n    *ngIf=\"!hideArrows\"\n    mat-icon-button\n    type=\"button\"\n    tabindex=\"-1\"\n    [color]=\"color\"\n    [disabled]=\"!loop && currentIndex == slidesList.length - 1\"\n    (click)=\"next()\"\n  >\n    <mat-icon\n      *ngIf=\"svgIconOverrides?.arrowForward; else: defaultArrowForward\"\n      [svgIcon]=\"svgIconOverrides.arrowForward\"\n    ></mat-icon>\n    <ng-template #defaultArrowForward>\n      <mat-icon>arrow_forward</mat-icon>\n    </ng-template>\n  </button>\n\n  <div\n    *ngIf=\"!hideIndicators\"\n    class=\"carousel-indicators\"\n    tabindex=\"-1\"\n    [style.flex-direction]=\"orientation === 'rtl' ? 'row-reverse' : 'row'\"\n  >\n    <button\n      *ngFor=\"let slide of slidesList; let i = index\"\n      type=\"button\"\n      tabindex=\"-1\"\n      mat-mini-fab\n      [color]=\"color\"\n      [disabled]=\"i == currentIndex\"\n      (click)=\"slideTo(i)\"\n      (focus)=\"carouselContainer.focus()\"\n    ></button>\n  </div>\n</div>\n",
                styles: [".carousel{width:100%;position:relative;overflow:hidden;outline:0}.carousel>button{position:absolute;z-index:1;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.carousel>button:first-of-type{left:30px}.carousel>button:last-of-type{right:30px}.carousel-list{width:100%;margin:0;padding:0;list-style:none;display:flex;position:relative}.carousel-slide{width:100%;height:0;display:flex;flex-shrink:0;position:relative}.carousel-slide:hover{cursor:-webkit-grab;cursor:grab}.carousel-indicators{display:flex;position:absolute;bottom:15px;z-index:1;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);outline:0}.carousel-indicators>button{width:10px;height:10px;margin:7.5px}"]
            }]
    }], function () { return [{ type: ɵngcc3.AnimationBuilder }, { type: ɵngcc0.Renderer2 }, { type: undefined, decorators: [{
                type: core.Inject,
                args: [core.PLATFORM_ID]
            }] }]; }, { timings: [{
            type: core.Input
        }], hideArrows: [{
            type: core.Input
        }], hideIndicators: [{
            type: core.Input
        }], color: [{
            type: core.Input
        }], maintainAspectRatio: [{
            type: core.Input
        }], proportion: [{
            type: core.Input
        }], slideHeight: [{
            type: core.Input
        }], useKeyboard: [{
            type: core.Input
        }], useMouseWheel: [{
            type: core.Input
        }], change: [{
            type: core.Output
        }], autoplay: [{
            type: core.Input
        }], interval: [{
            type: core.Input
        }], loop: [{
            type: core.Input
        }], maxWidth: [{
            type: core.Input
        }], slides: [{
            type: core.Input
        }], orientation: [{
            type: core.Input
        }], onKeyUp: [{
            type: core.HostListener,
            args: ['keyup', ['$event']]
        }], onMouseEnter: [{
            type: core.HostListener,
            args: ['mouseenter']
        }], onMouseLeave: [{
            type: core.HostListener,
            args: ['mouseleave']
        }], onMouseWheel: [{
            type: core.HostListener,
            args: ['mousewheel', ['$event']]
        }], onResize: [{
            type: core.HostListener,
            args: ['window:resize', ['$event']]
        }], svgIconOverrides: [{
            type: core.Input
        }], slidesList: [{
            type: core.ContentChildren,
            args: [MatCarouselSlideComponent]
        }], carouselContainer: [{
            type: core.ViewChild,
            args: ['carouselContainer']
        }], carouselList: [{
            type: core.ViewChild,
            args: ['carouselList']
        }] }); })();
        return MatCarouselComponent;
    }());

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    // https://github.com/angular/angular/issues/10541#issuecomment-300761387
    var  
    // https://github.com/angular/angular/issues/10541#issuecomment-300761387
    MatCarouselHammerConfig = /** @class */ (function (_super) {
        __extends(MatCarouselHammerConfig, _super);
        function MatCarouselHammerConfig() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.overrides = {
                pinch: { enable: false },
                rotate: { enable: false }
            };
            return _this;
        }
        return MatCarouselHammerConfig;
    }(platformBrowser.HammerGestureConfig));
    var MatCarouselModule = /** @class */ (function () {
        function MatCarouselModule() {
        }
        /**
         * @return {?}
         */
        MatCarouselModule.forRoot = /**
         * @return {?}
         */
            function () {
                return {
                    ngModule: MatCarouselModule,
                    providers: [
                        { provide: platformBrowser.HAMMER_GESTURE_CONFIG, useClass: MatCarouselHammerConfig }
                    ]
                };
            };
MatCarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCarouselModule });
MatCarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCarouselModule_Factory(t) { return new (t || MatCarouselModule)(); }, imports: [[common.CommonModule, button.MatButtonModule, icon.MatIconModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCarouselModule, { declarations: [MatCarouselComponent, MatCarouselSlideComponent], imports: [ɵngcc2.CommonModule, ɵngcc4.MatButtonModule, ɵngcc5.MatIconModule], exports: [MatCarouselComponent, MatCarouselSlideComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCarouselModule, [{
        type: core.NgModule,
        args: [{
                declarations: [MatCarouselComponent, MatCarouselSlideComponent],
                imports: [common.CommonModule, button.MatButtonModule, icon.MatIconModule],
                exports: [MatCarouselComponent, MatCarouselSlideComponent]
            }]
    }], function () { return []; }, null); })();
        return MatCarouselModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.MatCarouselComponent = MatCarouselComponent;
    exports.MatCarouselHammerConfig = MatCarouselHammerConfig;
    exports.MatCarouselModule = MatCarouselModule;
    exports.MatCarouselSlideComponent = MatCarouselSlideComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,