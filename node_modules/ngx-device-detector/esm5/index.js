import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DeviceDetectorService } from './device-detector.service';
import * as ɵngcc0 from '@angular/core';
var DeviceDetectorModule = /** @class */ (function () {
    function DeviceDetectorModule() {
    }
    DeviceDetectorModule_1 = DeviceDetectorModule;
    DeviceDetectorModule.forRoot = function () {
        return {
            ngModule: DeviceDetectorModule_1,
            providers: [DeviceDetectorService],
        };
    };
    var DeviceDetectorModule_1;
DeviceDetectorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DeviceDetectorModule });
DeviceDetectorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DeviceDetectorModule_Factory(t) { return new (t || DeviceDetectorModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DeviceDetectorModule, { imports: function () { return [CommonModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DeviceDetectorModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule]
            }]
    }], function () { return []; }, null); })();
    return DeviceDetectorModule;
}());
export { DeviceDetectorModule };
export { DeviceDetectorService } from './device-detector.service';
export { ReTree } from './retree';
export * from './device-detector.constants';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIm5nOi9uZ3gtZGV2aWNlLWRldGVjdG9yL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQTtBQUM3RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUE7QUFDOUMsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUE7O0FBS2pFO0lBQUE7SUFPQSxDQUFDOzZCQVBZLG9CQUFvQjtJQUN4Qiw0QkFBTyxHQUFkO1FBQ0UsT0FBTztZQUNMLFFBQVEsRUFBRSxzQkFBb0I7WUFDOUIsU0FBUyxFQUFFLENBQUMscUJBQXFCLENBQUM7U0FDbkMsQ0FBQTtJQUNILENBQUM7K0JBRzBCO0lBVGhCLG9CQUFvQix5REFIaEM7SUFBUSxDQUFDLGNBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLFdBQ3hCLENBQUMsUUFDVyxvQkFBb0IsQ0FPaEM7Ozs7Ozs7Z0RBQ0Q7SUFEQSwyQkFBQztDQUFBLEFBUEQsSUFPQztTQVBZLG9CQUFvQjtBQVNqQyxPQUFPLEVBQUUscUJBQXFCLEVBQWMsTUFBTSwyQkFBMkIsQ0FBQTtBQUM3RSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFBO0FBQ2pDLGNBQWMsNkJBQTZCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nXG5pbXBvcnQgeyBEZXZpY2VEZXRlY3RvclNlcnZpY2UgfSBmcm9tICcuL2RldmljZS1kZXRlY3Rvci5zZXJ2aWNlJ1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbn0pXG5leHBvcnQgY2xhc3MgRGV2aWNlRGV0ZWN0b3JNb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPERldmljZURldGVjdG9yTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBEZXZpY2VEZXRlY3Rvck1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW0RldmljZURldGVjdG9yU2VydmljZV0sXG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCB7IERldmljZURldGVjdG9yU2VydmljZSwgRGV2aWNlSW5mbyB9IGZyb20gJy4vZGV2aWNlLWRldGVjdG9yLnNlcnZpY2UnXG5leHBvcnQgeyBSZVRyZWUgfSBmcm9tICcuL3JldHJlZSdcbmV4cG9ydCAqIGZyb20gJy4vZGV2aWNlLWRldGVjdG9yLmNvbnN0YW50cydcbiJdfQ==